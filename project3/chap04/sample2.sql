SELECT EMPLOYEE_ID
     , FIRST_NAME
     , LAST_NAME
     , DEPARTMENT_ID
 FROM EMPLOYEES;

SELECT DEPARTMENT_ID
     , DEPARTMENT_NAME
 FROM DEPARTMENTS;

SELECT EMPLOYEE_ID
     , FIRST_NAME
     , LAST_NAME
     , A.DEPARTMENT_ID
     , DEPARTMENT_NAME
     , A.JOB_ID
     , JOB_TITLE
  FROM EMPLOYEES A JOIN DEPARTMENTS B
    ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
  JOIN JOBS C
    ON A.JOB_ID = C.JOB_ID
 WHERE EMPLOYEE_ID = 178
 ORDER BY 1;

SELECT EMPLOYEE_ID
     , FIRST_NAME
     , LAST_NAME
     , A.DEPARTMENT_ID
     , DEPARTMENT_NAME
     , A.JOB_ID
     , JOB_TITLE
  FROM EMPLOYEES A LEFT OUTER JOIN DEPARTMENTS B
    ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
  JOIN JOBS C
    ON A.JOB_ID = C.JOB_ID
 WHERE EMPLOYEE_ID = 178
 ORDER BY 1;

SELECT EMPLOYEE_ID
     , FIRST_NAME
     , LAST_NAME
     , A.DEPARTMENT_ID
     , DEPARTMENT_NAME
  FROM EMPLOYEES A RIGHT OUTER JOIN DEPARTMENTS B
    ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
 WHERE EMPLOYEE_ID = 178
 ORDER BY 1;

SELECT EMPLOYEE_ID
     , FIRST_NAME
     , LAST_NAME
     , A.DEPARTMENT_ID
     , DEPARTMENT_NAME
  FROM DEPARTMENTS A RIGHT OUTER JOIN EMPLOYEES B
    ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
 WHERE EMPLOYEE_ID = 178
 ORDER BY 1;

SELECT EMPLOYEE_ID
     , FIRST_NAME
     , LAST_NAME
     , A.DEPARTMENT_ID
     , DEPARTMENT_NAME
  FROM EMPLOYEES A FULL OUTER JOIN DEPARTMENTS B
    ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
 WHERE EMPLOYEE_ID = 178
 ORDER BY 1;


SELECT A.EMPLOYEE_ID
     , A.FIRST_NAME
     , A.LAST_NAME
     , B.JOB_TITLE
     , A.SALARY
  FROM EMPLOYEES A JOIN JOBS B
    ON A.SALARY BETWEEN B.MIN_SALARY AND B.MAX_SALARY
 ORDER BY 1;


SELECT A.EMPLOYEE_ID
     , A.FIRST_NAME
     , A.LAST_NAME
     , A.MANAGER_ID
     , B.FIRST_NAME AS MANAGER_FIRST_NAME
     , B.LAST_NAME AS MANAGER_LAST_NAME
  FROM EMPLOYEES A JOIN EMPLOYEES B
    ON A.MANAGER_ID = B.EMPLOYEE_ID
 ORDER BY 1;

 
SELECT * FROM JOBS;
SELECT * FROM EMPLOYEES;
SELECT * FROM EMPLOYEES;

SELECT * FROM USER_COL_COMMENTS WHERE TABLE_NAME = 'EMPLOYEES';

-- 모든 사원의 부서명과 직무명이 코드가 아닌 이름(명칭)으로 조회되도록 한다.
SELECT A.EMPLOYEE_ID
     , A.FIRST_NAME
     , A.LAST_NAME
     , B.DEPARTMENT_NAME
     , C.JOB_TITLE
  FROM EMPLOYEES A LEFT OUTER JOIN DEPARTMENTS B
    ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
  JOIN JOBS C
    ON A.JOB_ID = C.JOB_ID
 ORDER BY 1;

-- 모든 부서의 소재지를 조회하도록 한다.
SELECT A.DEPARTMENT_NAME
     , C.COUNTRY_NAME || ' ' || B.STATE_PROVINCE || ' ' || B.CITY || ' ' || B.STREET_ADDRESS
     , B.POSTAL_CODE
  FROM DEPARTMENTS A JOIN LOCATIONS B
    ON A.LOCATION_ID = B.LOCATION_ID
  JOIN COUNTRIES C
    ON B.COUNTRY_ID = C.COUNTRY_ID;

-- 모든 사원의 급여가 직무에 정해진 범위에 맞게 받고 있는지 조회하도록 한다.
SELECT A.EMPLOYEE_ID
     , A.FIRST_NAME
     , A.LAST_NAME
     , A.SALARY
     , B.JOB_ID
     , B.JOB_TITLE
     , '적절한 급여' AS "적합/부적합"
  FROM EMPLOYEES A JOIN JOBS B
    ON A.JOB_ID = B.JOB_ID
 WHERE A.SALARY BETWEEN B.MIN_SALARY AND B.MAX_SALARY
UNION
SELECT A.EMPLOYEE_ID
     , A.FIRST_NAME
     , A.LAST_NAME
     , A.SALARY
     , B.JOB_ID
     , B.JOB_TITLE
     , '부적절한 급여' AS "적합/부적합"
  FROM EMPLOYEES A JOIN JOBS B
    ON A.JOB_ID = B.JOB_ID
 WHERE A.SALARY NOT BETWEEN B.MIN_SALARY AND B.MAX_SALARY;


SELECT A.EMPLOYEE_ID
     , A.FIRST_NAME
     , A.LAST_NAME
     , A.SALARY
     , B.JOB_ID
     , B.JOB_TITLE
     , CASE WHEN A.SALARY BETWEEN B.MIN_SALARY AND B.MAX_SALARY THEN '적절한 급여'
            ELSE '부적절한 급여'
        END AS "적합/부적합"
  FROM EMPLOYEES A JOIN JOBS B
    ON A.JOB_ID = B.JOB_ID;


-- 대륙별 직원수를 구하도록 한다.
SELECT E.REGION_NAME
     , COUNT(*)
  FROM EMPLOYEES A JOIN DEPARTMENTS B
    ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
  JOIN LOCATIONS C
    ON B.LOCATION_ID = C.LOCATION_ID
  JOIN COUNTRIES D
    ON C.COUNTRY_ID = D.COUNTRY_ID
  JOIN REGIONS E
    ON D.REGION_ID = E.REGION_ID
 GROUP BY ROLLUP(E.REGION_NAME);

-- 지역(국가)별 직원수를 구하도록 한다.
SELECT D.COUNTRY_NAME
     , COUNT(*)
  FROM EMPLOYEES A JOIN DEPARTMENTS B
    ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
  JOIN LOCATIONS C
    ON B.LOCATION_ID = C.LOCATION_ID
  JOIN COUNTRIES D
    ON C.COUNTRY_ID = D.COUNTRY_ID
 GROUP BY ROLLUP(D.COUNTRY_NAME);